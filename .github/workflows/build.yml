name: ffmpeg-build

on:
  pull_request:
  push:
    paths-ignore:
    - README.md'
  
jobs:   
  build_ffmpeg_msvc:
    runs-on: windows-2019
    strategy:
      matrix:
        platform: [x86, amd64]
        license: [gpl, lgpl]
        version: [n4.2.5, n4.3.3, n4.4.1, n5.0]
        build: [debug, release]
          
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'   
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
        
    - uses: ilammy/msvc-dev-cmd@v1.10.0
      with:
        arch: ${{ matrix.platform }}
        
    - name: Set variables
      id: vars
      run: |
        If ("${{ matrix.platform }}" -eq "x86") {
          echo "::set-output name=msys::MINGW32"
          echo "::set-output name=ffarch::x86"
          echo "::set-output name=mgwarch::i686"
        } else {
          echo "::set-output name=msys::MINGW64"
          echo "::set-output name=ffarch::x86_64"
          echo "::set-output name=mgwarch::x86_64"
        }
        
        If ("${{ matrix.license }}" -eq "gpl") {
            echo "::set-output name=licflag::--enable-gpl"
        }
        
        If ("${{ matrix.build }}" -eq "debug") {
            echo "::set-output name=cflags::-MDd"
            echo "::set-output name=ldflags::/NODEFAULTLIB:libcmt"
            echo "::set-output name=debug::--enable-debug"
        }
    - uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        msystem: ${{ steps.vars.outputs.msys }}
      
    - name: Install dependencies
      run: |
        set MSYSTEM=MSYS
        msys2 -c 'pacman --noconfirm -S make gcc diffutils mingw-w64-${{ steps.vars.outputs.mgwarch }}-pkg-config mingw-w64-${{ steps.vars.outputs.mgwarch }}-nasm mingw-w64-${{ steps.vars.outputs.mgwarch }}-yasm'
        
    - name: Build ffmpeg
      shell: msys2 {0}
      run: |
        git clone https://github.com/FFmpeg/FFmpeg.git ffmpeg-src
        mkdir ffmpeg
        mkdir ffmpeg-src/build
        cd ffmpeg-src/build
        git checkout ${{ matrix.version }}
        CC=cl ../configure --toolchain=msvc --arch=${{ steps.vars.outputs.ffarch }} --extra-cflags="-Z7 ${{ steps.vars.outputs.cflags }}" --extra-cxxflags="-Z7 ${{ steps.vars.outputs.cflags }}" --extra-ldflags="/debug:full ${{ steps.vars.outputs.ldlags }}" ${{ steps.vars.outputs.debug }} --enable-x86asm  --enable-asm --enable-shared --disable-static --disable-programs ${{ steps.vars.outputs.licflag }} --prefix=../../ffmpeg
        make -j 2
        make install
        find . -name \*.pdb -exec cp -v '{}' "../../ffmpeg/bin" \;
        
    - name: Create archives
      shell: bash
      run: |
        mkdir artifact
        7z a artifact/ffmpeg-${{ matrix.version }}-win-msvc-${{ steps.vars.outputs.mgwarch }}-${{ matrix.license }}-${{ matrix.build }}.zip ffmpeg/*
        
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ffmpeg-msvc
        path: artifact
        
    - name: Upload release
      if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "${{ matrix.version }}"
        files: |
          artifact\*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        